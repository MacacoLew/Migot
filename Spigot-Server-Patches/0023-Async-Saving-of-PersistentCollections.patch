From 2174321045bc7216e62fc3ae73c246c206a3cf8e Mon Sep 17 00:00:00 2001
From: Poweruser <poweruser.rs@hotmail.com>
Date: Sun, 23 Aug 2015 01:18:26 +0200
Subject: [PATCH] Async Saving of PersistentCollections


diff --git a/src/main/java/de/minetick/Migot.java b/src/main/java/de/minetick/Migot.java
index 480c666..3d03d29 100644
--- a/src/main/java/de/minetick/Migot.java
+++ b/src/main/java/de/minetick/Migot.java
@@ -1,11 +1,14 @@
 package de.minetick;
 
 import java.io.File;
+import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.OutputStream;
 import java.util.Collections;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.concurrent.Callable;
+import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.ScheduledFuture;
@@ -15,6 +18,8 @@ import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.NBTCompressedStreamTools;
+import net.minecraft.server.NBTTagCompound;
 
 import org.bukkit.configuration.InvalidConfigurationException;
 import org.bukkit.craftbukkit.CraftServer;
@@ -29,6 +34,7 @@ public class Migot {
     private TickTimer tickTimerObject;
     private int timerDelay = 45;
     private ScheduledExecutorService timerService = Executors.newScheduledThreadPool(1, new MigotThreadFactory(Thread.NORM_PRIORITY + 2, "Migot_TimerService"));
+    private ExecutorService nbtFileService = Executors.newSingleThreadExecutor(new MigotThreadFactory(Thread.NORM_PRIORITY - 2, "MinetickMod_NBTFileSaver"));
     private ScheduledFuture<Object> tickTimerTask;
     private static Migot instance;
     private boolean initDone = false;
@@ -73,6 +79,14 @@ public class Migot {
 
     public void shutdown() {
         this.timerService.shutdown();
+        this.nbtFileService.shutdown();
+        while(!this.nbtFileService.isTerminated()) {
+            try {
+                if(!this.nbtFileService.awaitTermination(3, TimeUnit.MINUTES)) {
+                    log.warn("Migot is still waiting for NBT Files to be saved.");
+                }
+            } catch(InterruptedException e) {}
+        }
     }
 
     public void checkTickTime(long tickTime) {
@@ -122,4 +136,43 @@ public class Migot {
         }
         return emptyArray;
     }
+
+    public static void saveNBTFileStatic(NBTTagCompound compound, File file) {
+        instance.saveNBTFile(compound, file);
+    }
+
+    public void saveNBTFile(NBTTagCompound compound, File file) {
+        this.nbtFileService.submit(new NBTFileSaver(compound, file));
+    }
+
+    private class NBTFileSaver implements Callable<Object> {
+
+        private NBTTagCompound compound;
+        private File file;
+
+        public NBTFileSaver(NBTTagCompound compound, File file) {
+            this.compound = compound;
+            this.file = file;
+        }
+
+        public Object call() {
+            FileOutputStream fileoutputstream = null;
+            try {
+                fileoutputstream = new FileOutputStream(this.file);
+                NBTCompressedStreamTools.a(this.compound, (OutputStream) fileoutputstream);
+            } catch (Exception e) {
+                log.error("Error \""+ e.getMessage() +"\" while saving file: " + this.file.getAbsolutePath());
+                e.printStackTrace();
+            } finally {
+                if(fileoutputstream != null) {
+                    try {
+                        fileoutputstream.close();
+                    } catch (IOException e) {}
+                }
+            }
+            this.compound = null;
+            this.file = null;
+            return null;
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/server/PersistentCollection.java b/src/main/java/net/minecraft/server/PersistentCollection.java
index 451f481..c43e0ad 100644
--- a/src/main/java/net/minecraft/server/PersistentCollection.java
+++ b/src/main/java/net/minecraft/server/PersistentCollection.java
@@ -96,10 +96,15 @@ public class PersistentCollection {
                     NBTTagCompound nbttagcompound1 = new NBTTagCompound();
 
                     nbttagcompound1.set("data", nbttagcompound);
+                    // Migot start
+                    /*
                     FileOutputStream fileoutputstream = new FileOutputStream(file);
 
                     NBTCompressedStreamTools.a(nbttagcompound1, (OutputStream) fileoutputstream);
                     fileoutputstream.close();
+                    */
+                    de.minetick.Migot.saveNBTFileStatic((NBTTagCompound) (nbttagcompound1.clone()), file);
+                    // Migot end
                 }
             } catch (Exception exception) {
                 exception.printStackTrace();
-- 
1.8.3.msysgit.0

